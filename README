* What is VTE?
- You could say that VTE is something of a research project of mine, based on
  the simple question:  "if programs can use a termcap file (through either
  libtermcap or curses or ncurses) to determine how to drive a terminal, why
  can't a terminal emulator use a termcap file to determine how to behave?"

* What does VTE include?
- VTE includes a library (libvte) which implements such a terminal emulator
  widget for GTK+ 2.0, and a sample application (vte) which wraps that widget
  in a GTK window.  Because I'm more concerned with whether or not it works,
  all settings are hard-coded to whatever I needed to test the last time I
  touched it.  If you actually want to use the widget to get work done, you
  should probably be using profterm.

* How does it work?
- The VTE library inserts terminal capability strings into a trie, and then
  uses it to determine if data received from a pseudo-terminal is a control
  sequence or just random data.  The sample program "interpret" illustrates
  what the widget actually sees after it filters incoming data.

* What's missing?
- Accessibility isn't completed yet.
- Mouse hilite tracking isn't implemented yet.
- Most control sequences are recognized, but many aren't implemented.  There
  are enough to run ls, vim, less, emacs and mutt, but more need to be
  implemented (ff, fs, i1, i3, is, iP, LF, LO, MC, mh, ML, mm, mo, nw, pf,
  pk, pl, pf, po, pO, ps, px, r1, r2, r3, RA, RF, rp, rs, RX, SA, SX, wi,
  several more from the XTerm set).
- Currently doesn't handle children exiting quite right (if the child spawned
  a background process which keeps its stdio open, we don't close because we
  don't get an EOF).
- Sequence matching is greedy, so that C=AB matches C and not A and then B.
- Bold doesn't work right if the default foreground color isn't gray.  Need
  to move to 20-color palette to fix this right.
- I'm not sure the widget implementation itself is correct.  There are many
  changes in going from GTK+ 1.2 to 2.0, and examples of the proper way to do
  things is currently scarce, so some of it's guesswork.
- An actual property interface needs to be retrofitted over the various options
  which are currently hard-coded at startup-time.
